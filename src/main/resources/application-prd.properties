app.profile=prd
#
#######################################################
#   KSCM API keys for the production (prd) instances  #
#           Expiration: ____________                  #
#######################################################
#
# These are the KSCM API keys for the "Banner Integration" user at the
# production instances. This user has role of "admin" to allow it to update
# KSCM course versions, which is needed to be able to update the
# bannerIntegrationFlag and bannerIntegrationResults properties.
#
# KSCM API keys expire one year after creation. New keys must be created
# and entered here prior to expiration date (noted above). This can
# be done at each KSCM instance by any user with 'admin' role: 1)
# log into the KSCM instance, 2) go to the Users app, 3) edit the
# "Banner Integration" user.
#
app.HAW.apikey=<stored in external file: ./config/application-<profile>.properties>
app.HIL.apikey=<stored in external file: ./config/application-<profile>.properties>
app.HON.apikey=<stored in external file: ./config/application-<profile>.properties>
app.KAP.apikey=<stored in external file: ./config/application-<profile>.properties>
app.KAU.apikey=<stored in external file: ./config/application-<profile>.properties>
app.LEE.apikey=<stored in external file: ./config/application-<profile>.properties>
app.MAN.apikey=<stored in external file: ./config/application-<profile>.properties>
app.MAU.apikey=<stored in external file: ./config/application-<profile>.properties>
app.WIN.apikey=<stored in external file: ./config/application-<profile>.properties>
app.WOA.apikey=<stored in external file: ./config/application-<profile>.properties>

#######################################################
#             BANNER DATASOURCE                       #
#######################################################
#
# Spring Boot DataSource properties
# See: https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#
# name -- name of datasource
app.datasource.banner.name=Banner
#
# type -- Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
app.datasource.banner.type=oracle.ucp.jdbc.PoolDataSourceImpl
#
# username -- Login kscmUser of the database.
app.datasource.banner.username=<stored in external file: ./config/application-<profile>.properties>
#
# password -- Login password of the database.
app.datasource.banner.password=<stored in external file: ./config/application-<profile>.properties>
#
# url -- JDBC url of the database.
# example value: jdbc:oracle:thin:@//example.com:1521/bandev.db.example
app.datasource.banner.url=<stored in external file: ./config/application-<profile>.properties>
#
# continue-on-error -- Do not stop if an error occurs while initializing the database. Useful if initializing db with /src/resources/schema.sql
app.datasource.banner.continue-on-error=true
#
# separator -- Statement separator in SQL initialization scripts. Useful if initializing db with /src/resources/schema.sql
# Default is ; but that will cause trouble if you define triggers using PLSQL because ; is used to separate PLSQL statements.
# Change it to something that doesn't normally appear in PLSQL, like $$.
app.datasource.banner.separator=$$
#
# Oracle UCP Specific DataSource Properties
# See: https://docs.oracle.com/database/122/JJUAR/oracle/ucp/jdbc/PoolDataSourceImpl.html
# See: https://blogs.oracle.com/dev2dev/ucp-with-spring-framework
#
app.datasource.banner.connectionFactoryClassName=oracle.jdbc.pool.OracleDataSource
app.datasource.banner.maxPoolSize=20
app.datasource.banner.minPoolSize=5
app.datasource.banner.maxIdleTime=5
app.datasource.banner.validateConnectionOnBorrow=true
#
# Setting maxStatements to a positive integer enables implicit statement caching. Default is 0.
# https://docs.oracle.com/cd/E18283_01/java.112/e12265/optimize.htm#insertedID5
# http://www.oracle.com/technetwork/articles/vasiliev-oracle-jdbc-090470.html
# "NOTE: Oracle strongly recommends you use the implicit Statement cache. Oracle JDBC drivers are designed on the assumption that the implicit
#  Statement cache is enabled. So, not using the Statement cache will have a negative impact on performance."
# https://docs.oracle.com/database/121/JJDBC/stmtcach.htm#JJDBC28650
app.datasource.banner.maxStatements=20
#
# NOTE: Setting fastConnectionFailoverEnabled to true
# requires: `ons.jar`  or you'll get error:
# java.lang.NoClassDefFoundError: oracle/ons/Subscriber
app.datasource.banner.fastConnectionFailoverEnabled=true
#
# This should probably get automatically populated from the `name` property.
# Filed bug: https://github.com/spring-projects/spring-boot/issues/8700
# Until that issue is fixed:
app.datasource.banner.dataSourceName=${app.datasource.banner.name}


